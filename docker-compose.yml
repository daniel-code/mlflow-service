# This docker-compose file is only for quick launch mlflow.
# Do not use in the production environment.


version: '3.6'

# rotating logs so they do not overflow
x-logging:
  logging: &default-logging
    driver: "local"
    options:
      max-size: "10m"
      max-file: "3"

services:
  db:
    image: postgres
    restart: always
    volumes:
      - "./data/postgres-data:/var/lib/postgresql/data"
    expose:
      - 5432
    networks:
      - internal-net
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  mlflow:
    restart: always
    build: ./mlflow
    image: mlflow:latest
    expose:
      - 5000
    networks:
      - internal-net
    volumes:
      - "./data/mlflow-data:/mlflow/mlruns"
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command:
      - sh
      - -c
      - mlflow server 
        --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        --default-artifact-root s3://${BUCKET_NAME} 
        --host 0.0.0.0

  minio:
    image: minio/minio
    restart: unless-stopped
    expose:
      - 9000
      - 9001
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PROMETHEUS_URL=${MINIO_PROMETHEUS_URL:-http://prometheus:9090}
      - MINIO_PROMETHEUS_AUTH_TYPE=${MINIO_PROMETHEUS_AUTH_TYPE:-public}
      - MLFLOW_TRACKING_INSECURE_TLS=true
    networks:
      - internal-net
    volumes:
      - "./data/minio-data:${MINIO_VOLUMES}"
    command: server ${MINIO_VOLUMES} --console-address ":9001"

  # Create a bucket named "bucket" if it doesn't exist
  # Inspire by https://mlflow.org/docs/latest/tracking/tutorials/remote-server.html#create-compose-yaml
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - BUCKET_NAME=${BUCKET_NAME}
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/${BUCKET_NAME}
      else
        echo '${BUCKET_NAME} already exists'
      fi
      "

  prometheus:
    image: quay.io/prometheus/prometheus:v2.37.1
    restart: unless-stopped
    logging: *default-logging
    networks:
      - internal-net
    expose:
      - 9090
    volumes:
      - "./prometheus/minio/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./data/prometheus-data:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
      - "5000:5000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/log:/var/log/nginx
    networks:
      - mlflow-net
      - internal-net
    depends_on:
      - minio

networks:
  internal-net:
  mlflow-net:
    external: true
